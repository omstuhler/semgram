% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_motifs.R
\name{extract_motifs}
\alias{extract_motifs}
\title{Extract semantic motifs from parsed text object}
\usage{
extract_motifs(
  tokens,
  entities = "*",
  motif_classes = c("t", "a", "be", "H", "At", "aP"),
  custom_cols,
  fast = F,
  parse_multi_token_entities = T,
  extract = "lemma",
  markup = F,
  add_sentence = F,
  be_entity = T,
  get_aux_verbs = F,
  aux_verb_markup = T,
  pron_as_ap = F,
  use_appos = T,
  lowercase = F,
  verbose = F
)
}
\arguments{
\item{tokens}{A tokens dataframe with predicted dependencies as generated by spacyr::spacy_parse(). Dependencies need to be in ClearNLP style. This tag set is used by all English language models implemented in spaCy. Other languages or dependency grammars are currently not supported.}

\item{entities}{Specifies the core entities around which to extract motifs. This can be a single character string or a vector of character strings.
Multi-token strings such as "Harry Potter" will be parsed if parse_multi_token_entities is set to TRUE. Note that this parameter is case-sensitive.
It defaults to "*" in which case any token is treated as a potential entity.}

\item{motif_classes}{A character vector specifying which motif classes should be considered in the extraction.
This can include "t" for treatments, "a" for actions, "be" for characterizations, "H" for possessions, as well as "At" and "aP" for agent-treatment and action-patient motifs respectively.
By default, all motif classes are considered. Note, however, that run time increases with the number of motif classes considered.}

\item{custom_cols}{The columns in the tokens object should be labeled according to spacyr's default, which is "doc_id", "sentence_id", "token_id", "token", "lemma", "pos", "head_token_id" , "dep_rel". If your the columns in your tokens object are not labeled according to this scheme, please re-label them or provide the matching column names to custom_cols in the corresponding order.}

\item{fast}{If set to true, some of the more specific extraction rules are not applied. This results in fewer extractions but faster run time. Defaults to FALSE.}

\item{parse_multi_token_entities}{Should multi-token entities (e.g. "Harry Potter') be considered. Defaults to TRUE. When using multi-token entities, it is crucial that tokens are separated by a space character. Make sure that your input matches the tokenized version in your tokens object.
For instance, hyphens are usually considered a token in tokenization, so that "Claude Lévi-Strauss" should be passed to entities as "Claude Lévi - Strauss".}

\item{extract}{Parameter defines whether extracted motifs are represented in "lemma" or "token" form. Defaults to "lemma" which reduces sparsity and is preferable for most purposes.}

\item{markup}{If TRUE, motifs will also be provided as collapsed markup tokens, e.g. "aP_ask_Harry". Defaults to FALSE.}

\item{add_sentence}{If TRUE, the sentence for each motif is added to the extracted motif. Note that this is done by simply pasting together the tokens of the sentence, so that the representation might differ minimally from the original text. Nonetheless, this can be helpful for validation and for a mode of analyses that switches between distant and close readings of the text. Defaults to FALSE. Note that setting this to TRUE will noticeably increase runtime.}

\item{be_entity}{Should things that are linked to an entity via "being" (or one of it's lemmas) be considered as characterization motifs?
For example, say we are extracting characterization motifs around the entity "immigrants" in the sentence "my parents are immigrants", should we extract the characterization motif "be_parent"? Defaults to TRUE.}

\item{get_aux_verbs}{Should auxiliary verbs (e.g. can, could, may, must) be considered a actions? Defaults to FALSE.}

\item{aux_verb_markup}{Should auxiliary verbs with "to" be marked up so that "going" in "going to eat" becomes "going-to".
Note that this will not affect cases of the sort "going to the bar." This can be especially useful for analyses concerning modality.
The parameter defaults to TRUE.}

\item{pron_as_ap}{Should pronouns be considered as agents and patients? Defaults to FALSE.}

\item{use_appos}{Should things linked to an entity via an appositional modifier be considered as equivalent to the entity?
For example, if we specify our entity to be "Peter" in the sentence "My brother Peter left.", should "brother" be considered equivalent to "Peter"?
Only if use_appos = TRUE, we can extract "leaving" as action motif associated with Peter, as the subject associated with "leaving" is "brother".}

\item{lowercase}{Should tokens and lemmas be lowercased? Defaults to FALSE.}

\item{verbose}{Defaults to FALSE.}
}
\value{
A list with six dataframes, one for each motif class. List elements of motif classes not specified in the motif_classes parameter will be empty.
}
\description{
This function extracts semantic motifs from text. The input is a data.frame representing a parsed text such as those returned by spacyr::spacy_parse().
The output is a list of data.frames containing semantic motifs such as actions or characterizations of textual entities. For a detailed explanation, see Stuhler (2022).
}
\examples{
# Parse a text with spacyr
tokens_df = spacyr::spacy_parse("Emil chased the thief.", dependency = TRUE, entity = FALSE)

# Extract motifs around specific entities, here "Emil"
extract_motifs(tokens = tokens_df, entities = c("Emil"))

# Extract all possible motifs
extract_motifs(tokens = tokens_df, entities = "*")
}
\references{
Stuhler, Oscar (2022) "Who Does What To Whom? Making Text Parsers Work for Sociological Inquiry." Sociological Methods and Research. <doi: 10.1177/00491241221099551>.
}
